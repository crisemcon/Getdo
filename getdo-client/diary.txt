DAY 1 (08/04/2020) 2hr 51min:

Started to develop the front-end of the application. I just discovered material-ui and did a basic course project with some features that
were useful to incorporate in this project. So first of all, I spent some time figuring out how i wanted the app look like, based on some competition.
The competition that I checked is NirvanaHQ, Everdo and Facilethings. Facilethings uses an interface that I will not implement soon, so that lets me
with the other two. They have a similar interface, so to build my app I inspire in the best choices that I think they make on each component.
Lets code! First of all I setted up a dashboard from mui-treasury library, customizing it to my preferences. I decide to not theme anything with colors
or typography, just focusing on sizes, layout and responsiveness. I developed the navbar, the elements inside the sidebar with the categories of GTD
system with their correspondent icon.

DAY 2 (09/04/2020) 5hr 30min:

Today I designed the cards that will be shown in the main content. I had to research a lot to get the design that I wanted, nesting components,
using custom styling on material-ui components but at the end I'm pretty satisfied with the result. It is a card with a checkbutton at the left,
then the name and the focus icon, followed by a menu button with the options to edit and delete. Then we have the tags, that are some badges
with the label inside. Next to them there is the time badge and the energy badge, who are supposed to show the time that activity will consume
and the effort, respectively. Finally we have a collapse button that expands the card to show the notes/description of the item, and if it is
pressed again it will collapse

DAY 3 (10/04/2020) 3hr 25min:

I started to make some functionality. I developed the Context API for the items to be displayed and the categories in the sidebar. So here is where 
I found some guideness from the MERNTasks tutorial. So first I created the sidebar context, reducer and state to detect when the user selects a
category. The way that I tested if it works is through Firefox React Components extension, where i can see if the state of the context changes.
Then I maked the items context, reducer and state, that is the main feature and controller of the application. To start simple, the items just have
4 properties, that are id, category, name, note. Next, I created the first function that is to focus on the items from the selected category so they
can be displayed in the main content. Also fixed some bugs, for example when I clicked a category on phone devices it did'nt close the sidebar. It was
solved by using a function provided by the component (mui-treasury). Another fix was that when the page was loaded (inbox selected by default), it will
not display any items, so I had to add an useEffect in the main component.

DAY 4 (11/04/2020) 5hr 05min:

Today was tough. I figured that focus cant be a category, cause for example, if I have an item with inbox category, and I want to focus it, it will change
its category from inbox to focus. So, i made a focus property in items and added a focusitem function in the itemstate. So now the user can focus a item
and it will belong to its original category but also it will be displayed in the focus section. Then I made the tags context api, so the items have an array
of tags of 3 different types: area, label and contact. Now the cards render the tags that matches the item tags. Finally I wanted to be able to add tags
to the new item that is beign created in the addDialog with a multiple select inside it. The problem is that it seems to be a bug when you use a multiple
select in a dialog/modal. The selection div starts to move vertically as you press the selection items. Tried and tried but I guess no success today:( I hope
tomorrow I figure out a solution for this issue.

DAY 5 (12/04/2020) 6hr 07min:

At the start of my coding journey I tested the app and notice that when I created a new item without tags it crashed.Quick fix, the item that is beign created
has to have an empty tag array. Then I moved to research about yesterday's bug and in the material-ui github repo it is actually a issue. A simple fix is to 
pass a certain menuprop. Then I noticed that filtering every tagid in every card with the tags context was very inefficient, so now items have a tag array
that has tags with all their info, and not only the id. Then I finished the addDialog tag select and It worked. After that I moved to create the content of
the tag category that is displayed after clicking it in the sidebar. It is composed of 3 expansion panels: areas, labels and contacts. Finally I created the
tag cards that includes their name, their type icon and a simple menu where u can edit or delete it(not functional). Thats it for today, i'm really happy to
finally get commited to a personal project, so for this week I have to work on Getdo at least 10 hours.

DAY 6 (13/04/2020) 4hr 34min:

Today I worked with the menu inside tag cards. It has the options to delete or edit a tag, so first i made the delete of the tag. Then, to edit, I have made a
editTagDialog where u can change the name of a the tag but keeps its id and its type. But the problem was that this edition and deletion only affected the global
tags and not the tags that are inside action cards. So, I had to think to make this actions in cascade to affect items as well. This give me a hard time because
i'm not that familiarized with array functions in javascript (ES6). After all, I figured out how to make the edit tags in cascade and then quickly found the way to
delete tags on cascade. I felt like when I was solving programming problems in C/C++ at college in it second year. Also I'm thinking about how the hell I'm going to
implement the projects that have multiple children listed. Well, I think I just will figure it out

